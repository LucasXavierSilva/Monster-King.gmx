<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creating variables

///when true draw text box and stop player from moving
convo = false;
global.Convo = false;

c_obj = obj_player; ///check-object (the object game will check for within talk range

///Setting location of textbox based on view
mx1 = view_xview[0];
my1 = view_yview[0];

///setting location of textbox based on talking person's location
mx2 = x;
my2 = y;

///setting location of the textbox on the bottom of the screen
mx3 = view_wview[0]/4
my3 = view_wview[0] - 300;

///setting location of textbox based on centering
mx4 = view_wview[0]/2;
my4 = view_wview[0] - 300;

trange = 97 /// used for checking if player is within the talk range

/// colors used for the background of the textbox
c_calm = c_aqua;
c_reg = c_black;
c_angry = c_red;
c_name = c_olive;

///colors used for text highlight
sc_silver = c_white;
sc_white = c_green;
sc_green = c_white;
sc_teal = c_white;

///buttons used to proceed or start convo
talk_button = "E";
talk_button2 = "MOUSE_BUTTON";
next_button = "R";
next_button2 = "MOUSE_BUTTON";

/// if true player will receive an event after talking a certain amount of time
hidden_event = false;
hidden_event_count = 0;
hidden_event_max = 5;

/// used for making text scroll and highlight
scroll_text = 0;
scroll_timer = 0.5;

num = 1; ///used to select the next thing to say
num_max = 2; ///used as the max amount of things character say

///used to tell when a part of the convo is reached
convo_part_max = 3; /// max amount of parts of the conversation
convo_part = 1; ///begining of the conversation

///List of everything the npc or characters will say

///part1
speak[1] = "Hello, this is me and that is you. Right?";
speak[2] = "I know you do not understand, but oranges are very#tasty.";

///part2
speak[3] = "Well, I did'nt ask you anything...";
speak[4] = "Well...";
speak[5] = "leave me alone...";
speak[6] = "";
speak[7] = "";
speak[8] = "";
speak[9] = "";
speak[10] = "";
speak[11] = "";
speak[12] = "";
speak[13] = "";
speak[14] = "";
speak[15] = "";
speak[16] = "";
speak[17] = "";
speak[18] = "";
speak[19] = "";
speak[20] = "";
speak[21] = "";
speak[22] = "";
speak[23] = "";
speak[24] = "";
speak[25] = "";
speak[26] = "";
speak[27] = "";
speak[28] = "";
speak[29] = "";
speak[30] = "";
speak[31] = "";
speak[32] = "";
speak[33] = "";
speak[34] = "";
speak[35] = "";
speak[36] = "";
speak[37] = "";
speak[38] = "";
speak[39] = "";
speak[40] = "";
speak[41] = "";
speak[42] = "";
speak[43] = "";
speak[44] = "";
speak[45] = "";
speak[46] = "";
speak[47] = "";
speak[48] = "";
speak[49] = "";
speak[50] = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///drawing textbox and text

//draw_self();

///drawing background of textbox
draw_rectangle_colour(mx2 - 200, my2 - 120, mx2 - 186 + string_width(speak[num]), my2 + string_height(speak[num]), c_white, c_white, c_white, c_white, false);
if global.convo == true &amp;&amp; convo == true{
        ///setting the depth of textbox
        depth =  -170;
        ///set up the option to do certain things per sentence
        
        ///checking wich sentence player is currently reading
        switch (num){
            case 1:{
            
            }
            break;
            
            case 2:{
            
            }
            break;
            
            case 3:{
            
            }
            break;
            case 4:{
            
            }
            break;
            
            case 5:{
            
            }
            break;
            
            case 6:{
            
            }
            break;
            
            case 7:{
            
            }
            break;
            
            case 8:{
            
            }
            break;
            
            case 9:{
            
            }
            break;
            
            case 10:{
            
            }
            break;
            
            case 11:{
            
            }
            break;
            
            case 12:{
            
            }
            break;
            
            case 13:{
            
            }
            break;
            
            case 14:{
            
            }
            break;
            
            case 15:{
            
            }
            break;
            
            case 16:{
            
            }
            break;
            
            case 17:{
            
            }
            break;
            
            case 18:{
            
            }
            break;
            
            case 19:{
            
            }
            break;
            
            case 20:{
            
            }
            break;
            
            case 21:{
            
            }
            break;
                        
            case 23:{
            
            }
            break;
            
            case 24:{
            
            }
            break;
            
            case 25:{
            
            }
            break;
            
        }
        ///end checking sentence
// draw_set_font(fnt_text_box)
    
        ///bg filler
        draw_rectangle_colour(mx2 - 200, my2 - 120, mx2 - 186 + string_width(speak[num]), my2 + string_height(speak[num]), c_calm, c_reg, c_angry, c_name, false);
        ///bg outilner
        draw_rectangle_colour(mx2 - 200, my2 - 120, mx2-186 + string_width(speak[num]), my2 + string_height(speak[num]), c_black, c_black, c_black, c_black, false);
        
        ///drawing text
        draw_text(mx2 - 177, my2 - 100, speak[num]);
        ///drawing highlight text
        draw_text_colour(mx2 - 177, my2 - 100, string_copy(speak[num], 0, scroll_text), sc_silver, sc_white, sc_green, sc_teal, 1);
        
        /// drawing the "next" button
        if scroll_text &gt;= string_length(speak[num]){
                ///drawing sprite
                //draw_sprite(spr_convo_proceed, 0, mx2 - 168 + string_widith(speak[num]), my2 - 107 + string_height(speak[num])/1.4);
        }
        
        ///Drawing the scrolling text (highlighting text)
        if scroll_text &lt; string_length(speak[num]){
            scroll_text += scroll_timer;
        }
        
        ///Seeing if player is trying to proceed with convo
        if keyboard_check_pressed(ord(next_button)){
            ///see if text is still scrolling
            if scroll_text &lt; string_length(speak[num]){
                scroll_text = string_length(speak[num]);
            }
            else{
                ///proceeding to next sentence or part of convo
                if num &lt; num_max{
                    num += 1;
                    scroll_text = 0;
                }
                /// checking if there is more to this convo and if player has reached breaking point
                else if convo_part &lt; convo_part_max{
                    convo_part += 1;
                    
                    ///creating a break point and/or proceeding to the next part of the convo
                    switch (convo_part){
                        case 2:{
                        
                        }
                        break;
                        
                        case 3:{
                        
                        }
                        break;
                        case 4:{
                        
                        }
                        break;
                        
                        case 5:{
                        
                        }
                        break;
                        
                        case 6:{
                        
                        }
                        break;
                        
                        case 7:{
                        
                        }
                        break;
                        
                        case 8:{
                        
                        }
                        break;
                        
                        case 9:{
                        
                        }
                        break;
                        
                        case 10:{
                        
                        }
                        break;
                        
                        case 11:{
                        
                        }
                        break;
                        
                        case 12:{
                        
                        }
                        break;
                        
                        case 13:{
                        
                        }
                        break;
                        
                        case 14:{
                        
                        }
                        break;
                        
                        case 15:{
                        
                        }
                        break;
                        
                        case 16:{
                        
                        }
                        break;
                        
                        case 17:{
                        
                        }
                        break;
                        
                        case 18:{
                        
                        }
                        break;
                        
                        case 19:{
                        
                        }
                        break;
                        
                        case 20:{
                        
                        }
                        break;
                        
                        case 21:{
                        
                        }
                        break;
                        
                        case 23:{
                        
                        }
                        break;
                        
                        case 24:{
                        
                        }
                        break;
                        
                        case 25:{
                        
                        }
                        break;
                        
                        case 26:{
                        
                        }
                        break;
                        
                        case 27:{
                        
                        }
                        break;
                        
                        case 28:{
                        
                        }
                        break;
                        
                        case 29:{
                        
                        }
                        break;
                        
                        case 30:{
                        
                        }
                        break;
                        
                        case 31:{
                        
                        }
                        break;
                        
                        case 32:{
                        
                        }
                        break;
                        
                        case 33:{
                        
                        }
                        break;
                        
                        case 34:{
                        
                        }
                        break;
                        
                        case 35:{
                        
                        }
                        break;
                        
                        case 36:{
                        
                        }
                        break;
                        
                        case 37:{
                        
                        }
                        break;
                        
                        case 38:{
                        
                        }
                        break;
                        
                        case 39:{
                        
                        }
                        break;
                        
                        case 40:{
                        
                        }
                        break;
                        
                        case 41:{
                        
                        }
                        break;
                        
                        case 42:{
                        
                        }
                        break;
                        
                        case 43:{
                        
                        }
                        break;
                        
                        case 44:{
                        
                        }
                        break;
                        
                        case 45:{
                        
                        }
                        break;
                        
                        case 46:{
                        
                        }
                        break;
                        
                        case 47:{
                        
                        }
                        break;
                        
                        case 48:{
                        
                        }
                        break;
                        
                        case 49:{
                        
                        }
                        break;
                        
                        case 50:{
                        
                        }
                        break;
                }/// endinf of checking wich part of convoi player is moving to
            }/// ending of checking current convo convo part and if there is more to current convo
            else if hidden_event == true{
                ///increasing the counter used to tell game if player has met condition
                //hidden_event_count += 1;
            
                ///Checking if a condition is need and if it has been met
                if hidden_event_count &lt; hidden_event_max{
                    ///activate hidden event [below]
                    
                }
                else{
                    ///reset the whole convo or start the convo from a fixed position
                }
            } /// end proceeding of next sentence
        } ///end of player pressing the "next" button
    } ///end of convo being activated
    
else{ 
///checking if player is within talk range
        ///he is in talk range
        if collision_circle(mx2, my2, trange, c_obj, false, true){
                /// checking if player is trying to activate convo
                if keyboard_check_pressed(ord(talk_button)){
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
